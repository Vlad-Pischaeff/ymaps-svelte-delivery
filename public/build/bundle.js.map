{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/helper.js","../../src/MKAD.js","../../src/mapObjects.js","../../src/DelieryPoint.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.2' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/**\r\n * @author Peter Kelley\r\n * @author pgkelley4@gmail.com\r\n */\r\n\r\n/**\r\n * See if two line segments intersect. This uses the \r\n * vector cross product approach described below:\r\n * http://stackoverflow.com/a/565282/786339\r\n * \r\n * @param {Object} p point object with x and y coordinates\r\n *  representing the start of the 1st line.\r\n * @param {Object} p2 point object with x and y coordinates\r\n *  representing the end of the 1st line.\r\n * @param {Object} q point object with x and y coordinates\r\n *  representing the start of the 2nd line.\r\n * @param {Object} q2 point object with x and y coordinates\r\n *  representing the end of the 2nd line.\r\n */\r\n export function doLineSegmentsIntersect(p, p2, q, q2) {\r\n\tvar r = subtractPoints(p2, p);\r\n\tvar s = subtractPoints(q2, q);\r\n\r\n\tvar uNumerator = crossProduct(subtractPoints(q, p), r);\r\n\tvar denominator = crossProduct(r, s);\r\n\r\n\tif (uNumerator == 0 && denominator == 0) {\r\n\t\t// They are coLlinear\r\n\t\t\r\n\t\t// Do they touch? (Are any of the points equal?)\r\n\t\tif (equalPoints(p, q) || equalPoints(p, q2) || equalPoints(p2, q) || equalPoints(p2, q2)) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\t// Do they overlap? (Are all the point differences in either direction the same sign)\r\n\t\treturn !allEqual(\r\n\t\t\t\t(q.x - p.x < 0),\r\n\t\t\t\t(q.x - p2.x < 0),\r\n\t\t\t\t(q2.x - p.x < 0),\r\n\t\t\t\t(q2.x - p2.x < 0)) ||\r\n\t\t\t!allEqual(\r\n\t\t\t\t(q.y - p.y < 0),\r\n\t\t\t\t(q.y - p2.y < 0),\r\n\t\t\t\t(q2.y - p.y < 0),\r\n\t\t\t\t(q2.y - p2.y < 0));\r\n\t}\r\n\r\n\tif (denominator == 0) {\r\n\t\t// lines are paralell\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar u = uNumerator / denominator;\r\n\tvar t = crossProduct(subtractPoints(q, p), s) / denominator;\r\n\r\n\treturn (t >= 0) && (t <= 1) && (u >= 0) && (u <= 1);\r\n}\r\n\r\n/**\r\n * Calculate the cross product of the two points.\r\n * \r\n * @param {Object} point1 point object with x and y coordinates\r\n * @param {Object} point2 point object with x and y coordinates\r\n * \r\n * @return the cross product result as a float\r\n */\r\nexport function crossProduct(point1, point2) {\r\n\treturn point1.x * point2.y - point1.y * point2.x;\r\n}\r\n\r\n/**\r\n * Subtract the second point from the first.\r\n * \r\n * @param {Object} point1 point object with x and y coordinates\r\n * @param {Object} point2 point object with x and y coordinates\r\n * \r\n * @return the subtraction result as a point object\r\n */ \r\nexport function subtractPoints(point1, point2) {\r\n\tvar result = {};\r\n\tresult.x = point1.x - point2.x;\r\n\tresult.y = point1.y - point2.y;\r\n\r\n\treturn result;\r\n}\r\n\r\n/**\r\n * See if the points are equal.\r\n *\r\n * @param {Object} point1 point object with x and y coordinates\r\n * @param {Object} point2 point object with x and y coordinates\r\n *\r\n * @return if the points are equal\r\n */\r\nexport function equalPoints(point1, point2) {\r\n\treturn (point1.x == point2.x) && (point1.y == point2.y)\r\n}\r\n\r\n/**\r\n * See if all arguments are equal.\r\n *\r\n * @param {...} args arguments that will be compared by '=='.\r\n *\r\n * @return if all arguments are equal\r\n */\r\nexport function allEqual(args) {\r\n\tvar firstValue = arguments[0],\r\n\t\ti;\r\n\tfor (i = 1; i < arguments.length; i += 1) {\r\n\t\tif (arguments[i] != firstValue) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\n\r\n/**\r\n * See if all arguments are equal.\r\n *\r\n * @param x1, x2, y1, y2 = first line, x3, x4, y3, y4 = second line\r\n *\r\n * @return intersection coordinates or false\r\n */\r\nexport function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\r\n\r\n  // Check if none of the lines are of length 0\r\n\tif ((x1 === x2 && y1 === y2) || (x3 === x4 && y3 === y4)) {\r\n\t\treturn false\r\n\t}\r\n\r\n\tlet denominator = ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1))\r\n\r\n  // Lines are parallel\r\n\tif (denominator === 0) {\r\n\t\treturn false\r\n\t}\r\n\r\n\tlet ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denominator\r\n\tlet ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denominator\r\n\r\n  // is the intersection along the segments\r\n\tif (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\r\n\t\treturn false\r\n\t}\r\n\r\n  // Return a object with the x and y coordinates of the intersection\r\n\tlet x = x1 + ua * (x2 - x1)\r\n\tlet y = y1 + ua * (y2 - y1)\r\n\r\n\treturn {x, y}\r\n}\r\n\r\nexport function randomInteger(min, max) {\r\n\t// случайное число от min до (max+1)\r\n\tlet rand = min + Math.random() * (max + 1 - min);\r\n\treturn Math.floor(rand);\r\n}\r\n\r\n/**\r\n * swap x,y for correct working with yMaps\r\n * меняем местами координаты\r\n * \r\n * @param {Array} arr array of coordinates [{\"Lat\": x, \"Lon\": y}, {}...]\r\n * \r\n * @return {Array} of swaped coordinates [[y, x], []...]\r\n */\r\nexport const setCoordArray = (arr) => {\r\n\treturn arr.map(n => [n.Lat, n.Lon]);\r\n}\r\n\r\n/**\r\n * swap x,y for correct working with yMaps\r\n * меняем местами координаты\r\n * \r\n * @param {Array} arr array of coordinates [[x, y], []...]\r\n * \r\n * @return {Array} of swaped coordinates [[y, x], []...]\r\n */\r\nexport const swapXY = (arr) => {\r\n\treturn arr.map(n => n.reverse());\r\n}\r\n\r\n/**\r\n * \r\n * set array of obj from array of coordinates\r\n * \r\n * @param {Array} arr [[xCoord, yCoord], [] ...]\r\n * \r\n * @return {Array} array of objects [{'x': xCoord, 'y': yCoord}, {} ...]\r\n */\r\nexport const setLines = (arr) => {\r\n\treturn arr.map(n => ({ 'x': n[0], 'y': n[1] }));\r\n}\r\n\r\n  /**\r\n   * get lines intersections coordinates & locations \r\n   * \r\n   * @param {Array} arr1 [{'x': xCoord, 'y': yCoord}, {}...]\r\n   * @param {Array} arr2 [{'x': xCoord, 'y': yCoord}, {}...]\r\n   * \r\n   * @return {Object} {'locations':[[x, y], []...], 'intersections': [{'x': i, 'y': j, 'px': p.x, 'py': p.y, 'coord': [p.x, p.y]}, {}...]}\r\n   */\r\n   const getIntersections = (arr1, arr2) => {\r\n    let locations = [], intersections = [];\r\n    for (let i = 0; i < arr1.length-1; i++) {\r\n      for (let j = 0; j < arr2.length-1; j++) {\r\n        let p = intersect(arr1[i]['x'],   arr1[i]['y'], \r\n                          arr1[i+1]['x'], arr1[i+1]['y'], \r\n                          arr2[j]['x'],   arr2[j]['y'],\r\n                          arr2[j+1]['x'], arr2[j+1]['y']);\r\n        if (p) {\r\n          locations.push([p.x, p.y]);\r\n          intersections = [ ...intersections, {'x': i, 'y': j, 'px': p.x, 'py': p.y, 'coord': [p.x, p.y]}];\r\n        }\r\n      }\r\n    }\r\n    return { 'locations': locations, 'intersections': intersections };\r\n  }\r\n  /**\r\n   * make 2 polygons from 1 with borders between intersections\r\n   * \r\n   * @param {Array} arr coordinates of source polygon\r\n   * @param {Array} its intersections coordinates\r\n   * @prarm {String} index choose first or second polygon ('x' or 'y')\r\n   * \r\n   * @return {Object} object of border coordinates of 2 polygons { 'Bounds1': [], 'Bounds2': []} \r\n   */\r\n  const getSplittedPlygons = (arr, its, index) => {\r\n    //\r\n    // swap values [its] array if idx > idxNext\r\n    //\r\n    let idx = its[0][index];\r\n    let idxNext = its[1][index];\r\n\r\n    if (idx > idxNext) {\r\n      [its[0], its[1]] = [its[1], its[0]];\r\n      idx = its[0][index];\r\n      idxNext = its[1][index];\r\n    }\r\n    //\r\n    // calculate length of two polygons without intersections \r\n    //\r\n    let len1 = Math.abs(idx - idxNext);\r\n    let len2 = arr.length - len1- idx;\r\n    //\r\n    // calculate two polygons coordinates with intersections\r\n    //\r\n    let Bounds1 = [ ...arr];\r\n    Bounds1.splice(idx + 1, len1, its[0].coord, its[1].coord);\r\n    let Bounds2 = [ ...arr];\r\n    Bounds2.splice(idxNext + 1, len2, its[1].coord, its[0].coord);\r\n    Bounds2.splice(0, idx + 1, its[0].coord);\r\n    return { Bounds1, Bounds2 };\r\n  }","export let MKAD = [[37.37305113134754,55.789845569071915],[37.37136017849624,55.788125163916355],[37.37088810970964,55.787230465235055],[37.370330210234535,55.78606974430356],[37.37007271816909,55.78493317140559],[37.36981522610367,55.783893298947454],[37.369600649382484,55.78263574153174],[37.369514818694014,55.78135395838063],[37.36955773403825,55.78031398998733],[37.369514818694014,55.77905631655508],[37.36930024197281,55.77775022792185],[37.36942898800552,55.77651665940302],[37.36942898800552,55.77530724043539],[37.36930024197286,55.77409778378345],[37.36930024197286,55.773033430746054],[37.36921441128438,55.771896475941794],[37.36925732662862,55.77078367941565],[37.36921441128438,55.769453119953056],[37.369171495940144,55.767928968525545],[37.36921441128441,55.76681605826095],[37.369085665251696,55.76563053179125],[37.369042749907464,55.764348186893855],[37.368999834563226,55.763138388729345],[37.36891400387475,55.76197694702599],[37.36895691921899,55.76062188779507],[37.36895691921899,55.7593877748514],[37.36891400387475,55.75829881909379],[37.368742342497804,55.75687103083533],[37.36878525784207,55.75563679869122],[37.3688281731863,55.75449933433216],[37.3688281731863,55.753313431764624],[37.36874234249783,55.75207908655421],[37.36874234249783,55.75048164040621],[37.36891400387478,55.74905356475163],[37.36908566525175,55.74755281850865],[37.369428988005644,55.74605201428977],[37.36994397213651,55.744430112293536],[37.370630617644316,55.7429291874497],[37.371403093840605,55.74137978485359],[37.372261400725364,55.73985453133153],[37.37277638485622,55.738789239396176],[37.373505945708274,55.73731230908809],[37.37432133724882,55.735980602500774],[37.37479340603542,55.73479413455444],[37.37560879757597,55.73326862254669],[37.376295443083784,55.73191256160915],[37.377067919280066,55.7305322367148],[37.37784039547635,55.72903077503777],[37.37848412563993,55.72750503683523],[37.3791278558035,55.72636674870157],[37.379900331999785,55.72496200677402],[37.38045823147489,55.7238720858268],[37.38101613094999,55.722733691329985],[37.381531115080854,55.721692152276916],[37.38208901455593,55.720674808130745],[37.382732744719505,55.71941520231296],[37.38333355953884,55.71808288253171],[37.383891459013945,55.71713811902973],[37.38453518917752,55.71590262443702],[37.385136003996855,55.714667090597985],[37.38577973416043,55.71340729020261],[37.38650929501248,55.712123220883704],[37.38736760189724,55.71103294007593],[37.388397570158965,55.70984571066633],[37.38938462307644,55.70885228678828],[37.391187067534446,55.70749537416425],[37.39286076595975,55.706283805045246],[37.394362803008086,55.70514489567346],[37.395993586089155,55.703933253362564],[37.397538538481726,55.70272157332291],[37.39895474484163,55.70180067126567],[37.400456781889964,55.70063739540406],[37.40187298824983,55.699595264583536],[37.403289194609684,55.69848039606736],[37.404834147002276,55.69738973292108],[37.40667950680451,55.69615361107454],[37.408095713164364,55.69499016641651],[37.40972649624548,55.69387516599352],[37.41092812588413,55.69278437379985],[37.41191517880163,55.691863236588866],[37.41273057034215,55.69082087082695],[37.41354596188267,55.68958454037016],[37.41427552273472,55.688323927716496],[37.414790506865586,55.6870147867594],[37.41504799893103,55.68597229118314],[37.41556298306187,55.68461458068142],[37.41629254391394,55.68325682283988],[37.41719376614294,55.682092992731135],[37.41796624233922,55.680929127834695],[37.418910379912475,55.67974097987635],[37.41994034817418,55.67840730123646],[37.42097031643591,55.676928076968345],[37.42191445400914,55.67571555616528],[37.422901506926635,55.674357488056415],[37.42384564449986,55.67304787753962],[37.42470395138467,55.67202926115065],[37.42560517361367,55.67074382626105],[37.42676388790811,55.66926431096586],[37.42779385616984,55.6678575066118],[37.42882382443155,55.66642639489545],[37.42989670803751,55.665068002951195],[37.43096959164345,55.663709563654095],[37.43204247524942,55.66242385427427],[37.43315827419962,55.661526258433156],[37.43431698849406,55.66014343519654],[37.435776110198155,55.6589061307192],[37.43710648586954,55.65781435885076],[37.43839394619669,55.65664976849115],[37.4395526604911,55.65560646007565],[37.44096886685099,55.65451459578579],[37.442299242522374,55.653349906835615],[37.44380127957076,55.65218518309602],[37.44517457058638,55.65106895685476],[37.44641911556927,55.64997696547849],[37.44770657589642,55.64881214096731],[37.44916569760054,55.64757447679612],[37.45053898861617,55.64636104241359],[37.45195519497602,55.645196109882384],[37.453457232024356,55.643958330937984],[37.45500218441695,55.642647698646904],[37.45641839077681,55.64145838308135],[37.457920427825144,55.640074847914356],[37.45929371884077,55.639006822298384],[37.46062409451215,55.637817395710854],[37.46204030087201,55.636676483069216],[37.46319901516645,55.63560836439698],[37.464701052214785,55.63432172807537],[37.465945597197695,55.63322926770054],[37.467533464934526,55.63191827487099],[37.46886384060591,55.630825747196006],[37.47023713162154,55.62958751218235],[37.47148167660445,55.62851919941991],[37.47289788296431,55.62723232930394],[37.47461449673388,55.625872571380505],[37.47615944912644,55.624488483403745],[37.4776614861748,55.623322897560826],[37.47907769253466,55.62210870862499],[37.480408068206046,55.62077305716869],[37.482081766631325,55.61936450248389],[37.483626719023924,55.61812590378161],[37.48469960262986,55.61732443662046],[37.48577248623583,55.61637722694301],[37.48710286190722,55.61516282194168],[37.488476152922836,55.61392408992365],[37.489677782561515,55.61290392816251],[37.49100815823292,55.61178657756024],[37.49216687252736,55.61081494234457],[37.49336850216604,55.60974611568171],[37.49469887783743,55.60860438215773],[37.4959005074761,55.60753549498801],[37.496973391082044,55.606733810411],[37.49821793606496,55.60566487204169],[37.49924790432669,55.60464449448719],[37.50036370327689,55.60376986393675],[37.50143658688283,55.602798029248774],[37.50263821652151,55.6016803894571],[37.50383984616018,55.60073280023583],[37.50486981442189,55.59990667805644],[37.50628602078177,55.59888615006653],[37.50791680386282,55.59791419386096],[37.50963341763236,55.59706371234399],[37.51147877743461,55.59626181281277],[37.51289498379447,55.59555709963695],[37.514697428252454,55.59494957807621],[37.51637112667776,55.594536458018986],[37.51838814785696,55.59400182557838],[37.51993310024953,55.59351578973872],[37.521349306609416,55.59319986320078],[37.5231517510674,55.59276242223888],[37.525512095000515,55.59220346277189],[37.52714287808156,55.591838919681244],[37.52937447598199,55.59130425033581],[37.53130566647272,55.59086678815211],[37.533151026274965,55.590429321071014],[37.5352109627984,55.58989463243214],[37.53709923794489,55.58955437221644],[37.53907334377985,55.58901967160593],[37.541219110991754,55.58846065859976],[37.54332196285945,55.58799885921555],[37.54533898403865,55.58748844302111],[37.547613497283265,55.58695371414364],[37.54975926449517,55.586394671591485],[37.55177628567437,55.585932847794545],[37.55387913754207,55.58544671158653],[37.556067820098214,55.584936262060424],[37.55825650265436,55.58442580586784],[37.56031643917779,55.58391534300873],[37.562462206389725,55.58340487348305],[37.56473671963434,55.582845780162856],[37.56675374081354,55.58240822329054],[37.568813677336976,55.58182480650837],[37.570873613860456,55.58148447603697],[37.57301938107236,55.58087673567167],[37.57512223294004,55.58034191633446],[37.57722508480773,55.57985571058754],[37.57915627529846,55.57934518804508],[37.58113038113342,55.578907591988006],[37.58288991024717,55.57846999103269],[37.58486401608213,55.578081008293644],[37.587095613982534,55.57747321502189],[37.58876931240781,55.57708422236527],[37.59044301083312,55.57684109998951],[37.59207379391416,55.576476413591145],[37.59366166165099,55.57625760011933],[37.5952495293878,55.576087411016836],[37.596708651091895,55.57589290827829],[37.59851109554991,55.57589290827829],[37.600227709319455,55.575771343575354],[37.60207306912168,55.57560115235624],[37.60434758236632,55.575503899898436],[37.60653626492246,55.57540664719873],[37.60902535488829,55.57521214107361],[37.611214037444434,55.575066260844764],[37.613488550689105,55.57496900706258],[37.615591402556795,55.574798812351034],[37.61769425442447,55.57472587153359],[37.61966836025943,55.57462861689868],[37.62151372006168,55.57445842070549],[37.623270689264906,55.57439501438654],[37.6253735411326,55.57424913110903],[37.62751930834451,55.574078933264026],[37.62953632952371,55.57403030517224],[37.6319825041453,55.57388442053402],[37.63417118670144,55.57371422110151],[37.63644569994606,55.57359264962472],[37.63876312853493,55.573519706557235],[37.641295133845,55.57334950553721],[37.64335507036843,55.57327656201615],[37.64575832964579,55.57308204529469],[37.647517858759535,55.572984786571105],[37.64970654131571,55.57286321282643],[37.65176647783914,55.57274163870378],[37.65404099108376,55.57259574925768],[37.65498512865702,55.572571434297075],[37.65648716570535,55.572425544215946],[37.65820377947489,55.57230396873257],[37.659963308588644,55.57227965359053],[37.661980329767836,55.572133762420805],[37.6634823668162,55.57201218603024],[37.665241895929945,55.571939240014494],[37.667216001764906,55.571817663019154],[37.66878486633732,55.57176117741397],[37.67118812561467,55.572004331377876],[37.67303348541692,55.572004331377876],[37.67475009918644,55.57222316865268],[37.6767242050214,55.57246631974389],[37.678612480167885,55.572855358345],[37.680543670658615,55.573268707617736],[37.682131538395446,55.57387656625771],[37.683762321476486,55.574265590828254],[37.685779342655685,55.57501931491951],[37.687410125736754,55.57550558081616],[37.689040908817795,55.57618634291171],[37.69037128448918,55.57662396942834],[37.69200206757025,55.577231775908565],[37.69367576599553,55.57788819629416],[37.695091972355385,55.57844736052223],[37.6968944168134,55.579103760504395],[37.698267707829025,55.579565664992124],[37.69981266022162,55.580149115491594],[37.70140052795843,55.580683937466524],[37.70303131103947,55.58134029989004],[37.704747924809006,55.581899414743425],[37.70612121582463,55.58255575675839],[37.70805240631535,55.58313916263108],[37.709597358707924,55.58377117583369],[37.71114231110052,55.584378871199156],[37.71255851746038,55.58498655712264],[37.71466136932805,55.58571576775225],[37.71667839050725,55.58634773929308],[37.71813751221134,55.58705261857173],[37.71972537994817,55.58766026291881],[37.72152782440619,55.5883165082021],[37.722944030766044,55.58902135197293],[37.72457481384709,55.58960466134199],[37.726076850895446,55.5902365699999],[37.727664718632255,55.590989986198956],[37.72903800964787,55.591548963030526],[37.73071170807318,55.59220514301414],[37.73199916840033,55.59283700962102],[37.73367286682561,55.59342026203529],[37.735432395939384,55.594149315309984],[37.73719192505314,55.5949269571425],[37.73890853882268,55.59572888407186],[37.74011016846136,55.596214892382015],[37.741698036198166,55.5968952938594],[37.74371505737736,55.59759998289766],[37.745045433048745,55.59828036025289],[37.74667621612981,55.59888783002141],[37.748221168522385,55.59951958856021],[37.74998069763616,55.60032142122328],[37.75156856537297,55.601001751181975],[37.75311351776556,55.60170636614804],[37.75440097809271,55.60241096840391],[37.755903015141044,55.60301837394045],[37.75684715271427,55.60362577003139],[37.75783420563177,55.604184566092826],[37.75886417389347,55.60484053387694],[37.76019454956486,55.60547219614542],[37.761567840580504,55.606249612611485],[37.763026962284606,55.60697842648835],[37.7644860839887,55.60773151987265],[37.765516052250426,55.60833884266875],[37.766760597233315,55.60906761755683],[37.76800514221623,55.60969921145859],[37.769163856510666,55.61033079514496],[37.770279655460875,55.61105953285879],[37.7712237930341,55.61159393187199],[37.77212501526312,55.61200687155466],[37.772811660770934,55.612346936249544],[37.77375579834416,55.612905607532866],[37.77487159729437,55.61358571830606],[37.77615905762152,55.614290106260746],[37.77731777191593,55.61492161569195],[37.778433570866135,55.61562597954547],[37.779163131718185,55.616014588645655],[37.7800643539472,55.61647605692798],[37.78118015289738,55.61698609447275],[37.78233886719182,55.61778756858018],[37.78332592010931,55.61824901591114],[37.784484634403725,55.61890474746337],[37.78581501007511,55.61963332515831],[37.787231216434996,55.620264748160956],[37.788089523319755,55.62065331108585],[37.78903366089299,55.62113900930269],[37.789977798466246,55.62152756352473],[37.79113651276066,55.622134671753344],[37.79220939636662,55.62281462175859],[37.793625602726486,55.62347027661687],[37.79469848633245,55.62417448623354],[37.7959859466596,55.624830118247736],[37.7970159149213,55.62551002129575],[37.79787422180609,55.6261170675795],[37.79881835937932,55.6267241044207],[37.79997707367376,55.62754965937156],[37.80074954987004,55.62825379538167],[37.80199409485296,55.628739399020404],[37.80280948639348,55.62951635227299],[37.804139862064865,55.6301718945469],[37.805298576359306,55.63085170453176],[37.806543121342244,55.631822841113625],[37.80783058166939,55.6327211209265],[37.80916095734078,55.63344944072775],[37.8100621795698,55.63405636350975],[37.811392555241184,55.63502742032276],[37.81268001556833,55.635707145710796],[37.81370998383004,55.63641113452045],[37.81469703674753,55.637018011228875],[37.81572700500924,55.63774625081679],[37.81684280395944,55.638523024725856],[37.8179156875654,55.63910559500682],[37.81868816376169,55.63971242979751],[37.81963230133492,55.64034352796513],[37.8208339309736,55.64112025015398],[37.82173515320262,55.64172705360183],[37.82285095215279,55.64247947676626],[37.82439590454539,55.643280427410254],[37.82534004211862,55.644008550085694],[37.82649875641306,55.644760929235915],[37.827485809330526,55.64539194571821],[37.828258285526815,55.645998682706995],[37.82954574585396,55.64682382986267],[37.830747375492685,55.64757615470558],[37.83169151306592,55.64823139354386],[37.832764396671884,55.64891088885768],[37.83370853424512,55.64959037233061],[37.83469558716261,55.65043971002066],[37.8355968093916,55.65119196509591],[37.836369285587885,55.652065533421045],[37.83731342316115,55.65306040684092],[37.83778549194778,55.65388540456779],[37.838343391422846,55.6546133292405],[37.83877254486524,55.655608137645636],[37.83920169830763,55.65677275913088],[37.83941627502882,55.65779177439472],[37.83967376709423,55.65854388761681],[37.83980251312697,55.659756942879156],[37.839931259159684,55.66063031929181],[37.83984542847121,55.661697752774536],[37.83958793640576,55.66269238038903],[37.83924461365187,55.66400233900283],[37.838650372543704,55.665641575650504],[37.83843579582252,55.66649056366849],[37.838092473068606,55.6671939968711],[37.83792081169166,55.668115717708254],[37.837405827560794,55.6689403968181],[37.83723416618385,55.66998334834308],[37.83684792808569,55.67109903302091],[37.83637585929906,55.67216617977424],[37.83598962120093,55.673306054245906],[37.8355175524143,55.67442164377457],[37.83521714500465,55.67527044049309],[37.834959652939204,55.676119218717055],[37.8344875841526,55.677016478444074],[37.83418717674292,55.67827745717956],[37.833758023300526,55.67924741304383],[37.83345761589087,55.680096104616744],[37.83311429313695,55.6809932727358],[37.83272805503882,55.68179343227054],[37.83225598625219,55.682642068358035],[37.83186974815406,55.68358766964343],[37.83161225608862,55.684436266632495],[37.831311848678965,55.685575782071396],[37.830882695236575,55.68632735911052],[37.83062520317115,55.68722438368354],[37.83032479576147,55.688072901422025],[37.83006730369605,55.689139583201275],[37.82976689628637,55.6904971359281],[37.82955420969301,55.69127112603929],[37.8294254636603,55.69180442677124],[37.82946837900454,55.69284676619885],[37.8294254636603,55.69359820289213],[37.8294254636603,55.69447082084908],[37.829597125037246,55.69548885040903],[37.829725871069954,55.69660380461639],[37.830026278479615,55.69720974459481],[37.830155024512344,55.69805804471708],[37.83036960123353,55.698833617220856],[37.830798754675925,55.69985153267823],[37.831270823462525,55.700796716050256],[37.83187163828186,55.70162070333751],[37.832325286365915,55.70249933008235],[37.83279735515254,55.70334751491569],[37.83326755467866,55.70413822428912],[37.833610877432555,55.70503483850572],[37.83416877690766,55.7059798959904],[37.834769591726996,55.706900699153685],[37.835155829825155,55.7077972497162],[37.83545623723481,55.708548397795425],[37.83609996739838,55.7095418294331],[37.83652912084077,55.710753297099885],[37.83725868169282,55.711843585745],[37.83781658116793,55.7125462000138],[37.838074073233344,55.71378180122093],[37.83867488805269,55.71484777856866],[37.83867488805269,55.71598640392193],[37.83884654942963,55.716955420521025],[37.83897529546236,55.71780329024131],[37.83910404149508,55.71911139583776],[37.839146956839336,55.720128780889944],[37.83944736424902,55.72114613932057],[37.83949027959326,55.72201813964924],[37.839619025625964,55.72276901315262],[37.839619025625964,55.72398006889634],[37.84000526372412,55.724852005676766],[37.83991943303565,55.7257239229044],[37.840048179068354,55.72676535396798],[37.8402198404453,55.727879412130434],[37.840434417166485,55.72894500311043],[37.84047733251072,55.72988947978938],[37.84060607854346,55.73080971704684],[37.84060607854346,55.73185101188212],[37.84069190923196,55.732989139453586],[37.84099231664164,55.73427251992348],[37.84112106267435,55.73548321737191],[37.84129272405129,55.73659702571731],[37.841550216116744,55.73785607497673],[37.841550216116744,55.73913929475002],[37.8418506235264,55.74044668263952],[37.841893538870636,55.74156034874178],[37.84203001318296,55.74286017339222],[37.84203001318296,55.74407060333325],[37.84211584387144,55.745329410472],[37.84211584387144,55.74656397016656],[37.84220167455991,55.74789531410732],[37.842287505248386,55.749129792267226],[37.842330420592646,55.7503158225684],[37.84241625128112,55.75138079851252],[37.84250208196959,55.75254255715818],[37.84250208196959,55.75380108980666],[37.84254499731383,55.75476916409516],[37.842716658690776,55.7559066205518],[37.84254499731383,55.7571408441274],[37.842845404723484,55.75820563294962],[37.84280248937925,55.75941558480988],[37.84293123541196,55.76079488394525],[37.84288832006772,55.76207734620252],[37.843102896788935,55.76309360696511],[37.84297415075622,55.7641098411286],[37.843145812133166,55.765247024012716],[37.843059981444696,55.76626320181275],[37.84327455816588,55.76766645124482],[37.84323164282164,55.76875514430454],[37.84336038885435,55.76955349981007],[37.84336038885435,55.77081148122492],[37.84336038885435,55.77211780338939],[37.843188727477404,55.77325475171042],[37.843188727477404,55.774391666727055],[37.843188727477404,55.775165717468994],[37.84280248937925,55.7764477050511],[37.84280248937925,55.777294277407115],[37.84280248937925,55.77809245728487],[37.84254499731383,55.77925341689097],[37.84245916662536,55.78024504238278],[37.842373335936884,55.78118827238208],[37.842287505248386,55.78193800295457],[37.84215875921568,55.7830504796779],[37.84198709783873,55.78435638991265],[37.84185835180602,55.78537206748321],[37.84185835180602,55.78631517284633],[37.84168669042907,55.78742752406166],[37.84168669042907,55.78846730178908],[37.84160085974057,55.7895070516458],[37.84142919836363,55.7906434905396],[37.841171706298205,55.79132050213908],[37.84121462164244,55.7920458585966],[37.841085875609735,55.79267448988691],[37.8410429602655,55.79371412696855],[37.84087129888852,55.794342731218954],[37.84091421423276,55.79518891315888],[37.84061380682311,55.79620430711541],[37.8407854682001,55.79702627323287],[37.84052797613466,55.79782404720853],[37.84052797613466,55.798742675697675],[37.84027048406924,55.79973380308078],[37.84044214544618,55.800459002188525],[37.840227568725005,55.80135339574111],[37.84014173803653,55.80219942470725],[37.839884245971085,55.80319046373067],[37.83979841528261,55.804350672348555],[37.839884245971085,55.80563169569596],[37.839884245971085,55.8068401694833],[37.839583838561424,55.8080244372439],[37.839455092528716,55.808942824073505],[37.83941217718448,55.81019952867549],[37.83924051580751,55.81148035874489],[37.839154685119034,55.812881973334335],[37.83894010839785,55.81399356265528],[37.83894010839785,55.81520177575415],[37.838682616332434,55.8163616248899],[37.83851095495546,55.817497276863996],[37.838339293578514,55.818608733801426],[37.83803888616886,55.8195751921797],[37.8376526480707,55.82087987275108],[37.837137663939835,55.82203955193819],[37.83619352636661,55.82339246710968],[37.835163558104874,55.824624545176384],[37.83413358984317,55.82575995497304],[37.832631552794815,55.82701611426762],[37.831387007811905,55.82795820700546],[37.829455817321204,55.82931091547948],[37.82735296545351,55.83034957027834],[37.8257650977167,55.831170812493],[37.824177229979895,55.83196788387774],[37.82246061621036,55.83283739758094],[37.82065817175234,55.83390011003913],[37.81876989660585,55.83476958035872],[37.81718202886905,55.83566318228843],[37.815422499755265,55.83650846243141],[37.813748801329986,55.83740202423284],[37.81190344152774,55.83831971488861],[37.810100997069725,55.839213234890785],[37.808513129332916,55.840058437535724],[37.80701109228456,55.84083117809286],[37.80550905523623,55.84162805063825],[37.80430742559755,55.8421834369548],[37.80314871130314,55.84281125537044],[37.80173250494325,55.843632233320236],[37.800144637206444,55.84447733949351],[37.798771346190826,55.845056830206005],[37.79696890173281,55.84599848411113],[37.79550978002871,55.84669867345315],[37.793964827636145,55.847567856386554],[37.792376959899315,55.84843701980127],[37.79100366888369,55.84911302229629],[37.7896732932123,55.849813155290136],[37.788471663573624,55.85046499186443],[37.78688379583682,55.85118924184839],[37.78546758947696,55.851985901175965],[37.7838368063959,55.85280668454225],[37.782334769347564,55.85355503067428],[37.78066107092226,55.85439992020394],[37.779159033873924,55.85519651343545],[37.77769991216983,55.85594481335072],[37.77649828253115,55.85657240857262],[37.775167906859764,55.857272406618456],[37.77362295446719,55.858044803558066],[37.772249663451575,55.858720638231134],[37.77109094915716,55.859444733715094],[37.76915975866643,55.86038603757523],[37.76697107611029,55.861351453640275],[37.76525446234075,55.8624857867312],[37.76323744116155,55.86333048125523],[37.76109167394964,55.86439235677305],[37.75916048345892,55.8654542031404],[37.75701471624701,55.86658841592465],[37.754954779723576,55.86765020200492],[37.75302358923285,55.86863956734398],[37.75104948339789,55.86965303730213],[37.74903246221869,55.87076299773547],[37.74710127172797,55.871752283443804],[37.74482675848333,55.87281392775755],[37.74319597540234,55.873803161004346],[37.74177976904245,55.874454593464066],[37.74023481664988,55.87529902661434],[37.738475287536104,55.87626407048976],[37.73667284307812,55.87708433884531],[37.734741652587395,55.87802521347036],[37.732724631408196,55.879038437459535],[37.730836356261705,55.87993101754395],[37.728776419738274,55.88096831445241],[37.72697397528026,55.881860849978196],[37.72538610754343,55.882584512302955],[37.723540747741204,55.883669980388],[37.72212454138132,55.884345367374344],[37.72045084295604,55.885165464270095],[37.71920629797312,55.88586494493066],[37.71800466833445,55.886492054760396],[37.71603056249949,55.88752917561032],[37.71444269476268,55.888300968412885],[37.71276899633738,55.88914509914235],[37.711009467223626,55.889989211433466],[37.709421599486795,55.89073683835073],[37.7079624777827,55.891363869128284],[37.70637461004589,55.892063237607566],[37.70465799627635,55.892690246861946],[37.703070128539544,55.89310020895024],[37.7012247687373,55.893582511720574],[37.69985147772167,55.89396834960223],[37.69787737188666,55.8942094963281],[37.69513078985541,55.89461944229704],[37.69242712316841,55.894691785251815],[37.69032427130073,55.894812356542076],[37.688049758056145,55.894908813316306],[37.68598982153271,55.894932927469014],[37.683672392943826,55.894932927469014],[37.68105455694529,55.89505349800677],[37.67839380560252,55.89510172611651],[37.67586180029246,55.89527052402653],[37.67294355688427,55.89534286576221],[37.67088362036083,55.895391093517205],[37.668394530395005,55.895439321205544],[37.66564794836376,55.89555989016299],[37.66320177374217,55.89565634505806],[37.66045519171092,55.89587336769148],[37.6579661017451,55.89604216223024],[37.65534826574657,55.89630740930115],[37.65324541387889,55.89635563584567],[37.650327170470675,55.89678967203728],[37.64770933447214,55.896982575446124],[37.64556356726023,55.897271928753405],[37.64320322332712,55.89746482975424],[37.64131494818066,55.89777829182629],[37.6392550116572,55.89811586352102],[37.63728090582224,55.89835698435413],[37.6352209692988,55.898622215532306],[37.632560217956026,55.89908033782367],[37.63062902746535,55.89944200948566],[37.62813993749953,55.899900122055],[37.626122916320334,55.90033411842505],[37.62414881048537,55.90062344662955],[37.622131789306174,55.90112976577287],[37.61977144537306,55.90163607827952],[37.617196524718786,55.90221471301781],[37.61466451940872,55.90281744831942],[37.61256166754102,55.90327552085827],[37.610415900329116,55.90383002245258],[37.60848470983839,55.904408624324496],[37.60668226538041,55.90486667799248],[37.605180228332046,55.90532472622803],[37.603120291808615,55.90590330570807],[37.6014036780391,55.90645776957627],[37.59925791082721,55.90696401224936],[37.59732672033649,55.907542567171106],[37.59556719122271,55.90804879561759],[37.5937647467647,55.90850680611298],[37.59204813299518,55.90908533792159],[37.589859450439036,55.909639756105044],[37.58801409063679,55.910025433624874],[37.58595415411335,55.91043521176894],[37.583851302245655,55.910676255704715],[37.58183428106646,55.91089319396037],[37.5793022757564,55.911037818787],[37.576984847167545,55.91115833906209],[37.57483907995566,55.91108602694866],[37.57117832861289,55.91096550644785],[37.56840177831992,55.91060394268843],[37.56501146612509,55.91031468924328],[37.562436545470796,55.90990490982019],[37.559647048095314,55.90954333612966],[37.557200873473725,55.90939870570546],[37.55432554540977,55.90906123260907],[37.5522226935421,55.90884428406112],[37.54930445013388,55.90850680611944],[37.546686614135346,55.90831396025716],[37.544712508300385,55.908048795624055],[37.542738402465424,55.90780773528668],[37.54054971990928,55.907590779696484],[37.538232291320426,55.90734971650005],[37.53621527014123,55.90713275834314],[37.533854926208114,55.90684347889595],[37.53153749761923,55.906409555662236],[37.529477561095796,55.905975627553],[37.5274605399166,55.90546937193001],[37.525443518737404,55.90486667801185],[37.5232977515255,55.90399878224665],[37.52115198431359,55.903106757942744],[37.51904913244589,55.90211827451609],[37.51686044988975,55.90122620678137],[37.51505800543173,55.90040645069872],[37.51325556097375,55.89958667721912],[37.511281455138786,55.89876688634234],[37.509350264648056,55.897850628892165],[37.50754782019005,55.89710313961336],[37.506045783141715,55.896355635871494],[37.50428625402793,55.89555989018882],[37.502526724914155,55.89488469918084],[37.500938857177374,55.89420949637976],[37.498836005309705,55.89326901566276],[37.497205222228665,55.892593784620075],[37.49540277777065,55.89179796145668],[37.49347158727993,55.89085742204085],[37.49175497351038,55.890158031737194],[37.490038359740865,55.88948274632948],[37.488450492004034,55.88890392087351],[37.48656221685757,55.88830096847099],[37.48450228033411,55.8877221253205],[37.48218485174526,55.88711915447932],[37.47969576177943,55.88651617423057],[37.47780748663295,55.88596142409285],[37.47531839666715,55.885454906143345],[37.47244306860316,55.88468305650335],[37.469782317260396,55.88400767542411],[37.46694990454068,55.883428767963224],[37.46403166113246,55.88309106794033],[37.46154257116668,55.88297046008069],[37.458967650512385,55.88284985183829],[37.45677896795624,55.88289809518041],[37.454547370055835,55.88277748671224],[37.45231577215545,55.88270512145067],[37.450127089599306,55.882536268646874],[37.447723830321955,55.882222682911475],[37.4451918250119,55.8818367277448],[37.443303549865455,55.88133015574676],[37.44175859747289,55.88084770004678],[37.44017072973605,55.88038936155448],[37.43862577734349,55.879955141127866],[37.437166655639395,55.87947266826678],[37.43549295721409,55.878990189384176],[37.4341625815427,55.87850770448],[37.432360137084686,55.878001088849885],[37.430386031249725,55.87734971614178],[37.428841078857154,55.87684308533702],[37.42703863439914,55.87626407057367],[37.424420798400604,55.87554028993169],[37.42309042272922,55.87505776197213],[37.421888793090545,55.87467173526871],[37.420343840697974,55.87411681513687],[37.41892763433812,55.873754906408216],[37.41764017401096,55.873248228497275],[37.41652437506076,55.87295869528155],[37.415537322143294,55.872596775719636],[37.41450735388157,55.8721865961138],[37.41321989355441,55.87160751161594],[37.412232840636946,55.87105254750133],[37.41115995703098,55.87059409287773],[37.41034456549046,55.87015976243128],[37.40914293585178,55.86965303741172],[37.4083704596555,55.86914630575252],[37.407125914672584,55.868494783862936],[37.406267607787825,55.86781911994615],[37.405452216247284,55.867239970045404],[37.404679740050994,55.86670907501782],[37.40395017919895,55.86615404060632],[37.40309187231419,55.86555073329892],[37.402233565429434,55.864923283716564],[37.4015469199216,55.86410275737256],[37.40081735906955,55.86323394579424],[37.40004488287327,55.862509921238924],[37.399315322021216,55.86181001795377],[37.39875742254611,55.86098942556172],[37.39824243841525,55.86033776626204],[37.39785620031712,55.85968609598514],[37.397341216186256,55.858986141615105],[37.3969549780881,55.85814135222659],[37.3964829093015,55.85734481962188],[37.39605375585911,55.8566206848418],[37.39566751776098,55.85587239799764],[37.39519544897435,55.85497926249762],[37.394895041564666,55.854303362469516],[37.394508803466536,55.85365159054664],[37.394122565368384,55.852999807645475],[37.393736327270254,55.85217902837542],[37.39330717382786,55.85130994899662],[37.392792189697,55.85056155944738],[37.39240595159887,55.84978901311926],[37.39206262884495,55.84899230856631],[37.391805136779524,55.84826801746792],[37.39163347540256,55.8473505626184],[37.391719306091055,55.84640894161289],[37.39184805212376,55.845515587682314],[37.39206262884495,55.84469464967544],[37.39266344366428,55.843728817971204],[37.39317842779515,55.84307686794341],[37.39360758123752,55.842400760020794],[37.39403673467991,55.84177293494785],[37.39429422674533,55.84128998565555],[37.39459463415501,55.84063799455406],[37.394937956908905,55.84008258606612],[37.3950237875974,55.83962376434882],[37.395367110351295,55.83875440302529],[37.395452941039764,55.838029920350124],[37.39566751776098,55.837160523237685],[37.39566751776098,55.83655676375747],[37.395710433105236,55.83571148467531],[37.395710433105236,55.83525261115694],[37.39579626379371,55.834721277131564],[37.395667517761,55.834093327520165],[37.39558168707253,55.83363443482601],[37.39545294103982,55.833127231310954],[37.395367110351344,55.83276493901868],[37.39515253363014,55.832161110999635],[37.39506670294166,55.83160558090676],[37.39480921087625,55.83105004284498],[37.39468046484353,55.83054280548104],[37.394508803466564,55.82996309750179],[37.39425131140114,55.82938338084539],[37.394122565368434,55.82885196628765],[37.39420839605693,55.82817560994797],[37.39395090399151,55.82752339800003],[37.39390798864727,55.82699195792241],[37.3938221579588,55.826436353681416],[37.393650496581856,55.826001527412004],[37.39356466589336,55.82561501107475],[37.39339300451641,55.825156017915],[37.3932642584837,55.82472117727317],[37.3932642584837,55.82433464816036],[37.39304968176252,55.823899798298335],[37.39296385107404,55.82344078481499],[37.39279218969707,55.82310256087339],[37.39270635900865,55.82254690085082],[37.39249178228744,55.822039552124735],[37.39249178228744,55.82155635668466],[37.39227720556626,55.82107315521805],[37.39201971350084,55.82061410824269],[37.39201971350084,55.8201550558283],[37.39180513677963,55.81974432011032],[37.39159056005845,55.819140289085624],[37.3914188986815,55.81872954260998],[37.39137598333726,55.818173819859176],[37.391161406616106,55.817690576224905],[37.390903914550684,55.81725565178388],[37.39077516851795,55.81667574493529],[37.39051767645253,55.81614415603335],[37.39030309973135,55.815636723460344],[37.39021726904287,55.81510512030453],[37.39008852301014,55.81457350985594],[37.390045607665904,55.81411438587234],[37.38991686163319,55.81360692671985],[37.38970228491201,55.81307529571865],[37.389187300781145,55.81266448495626],[37.389187300781145,55.811601189803774],[37.38850065527333,55.8103445306491],[37.38850065527333,55.80937784203447],[37.38832899389639,55.80850780166704],[37.38781400976552,55.807444392474075],[37.387299025634654,55.80647763152765],[37.386784041503795,55.805510846469936],[37.38626905737295,55.80454403730064],[37.385582411865116,55.80357720401938],[37.38472410498036,55.80251365956034],[37.38369413671865,55.80164346511976],[37.38335081396473,55.800579867612576],[37.38232084570303,55.799612935468936],[37.38146253881825,55.798742675922504],[37.38043257055654,55.797969095483765],[37.37940260229481,55.79690539718111],[37.37888761816395,55.79564826156833],[37.377857649902246,55.79477791303953],[37.37665602026357,55.793617417949164],[37.37579771337881,55.79274702384208],[37.37476774511708,55.79158646797978],[37.373566115478404,55.790716028293105],[37.37305113134754,55.789845569071915]];","import { randomInteger, setCoordArray  } from './helper';\r\n\r\nexport function PointObject(item) {\r\n  let r = randomInteger(16, 255).toString(16);\r\n  let g = randomInteger(16, 255).toString(16);\r\n  let b = randomInteger(16, 255).toString(16);\r\n\r\n  let optionsArea = { \r\n    fillColor: '#' + r + g + b, \r\n    strokeColor: '#003dаe', \r\n    opacity: 0.5, \r\n    strokeWidth: 2, \r\n    strokeStyle: 'shortdash'\r\n  };\r\n\r\n  this.CoordinatesJson = setCoordArray(item.CoordinatesJson);\r\n\r\n  let polygon = new ymaps.GeoObject({ \r\n    geometry: { type: \"Polygon\", coordinates: [ this.CoordinatesJson ] },\r\n    properties:{ balloonContent: item.Name }}, optionsArea);\r\n  this.Polygon = polygon;      // добавим в объект поле \"полигон\"\r\n\r\n  let square = Math.round(ymaps.util.calculateArea(polygon));\r\n  this.Square = square;        // добавим в объект поле \"площадь\"\r\n\r\n  this.Show = true;            // добавим в объект поле \"показывать\"\r\n  this.Name = item.Name;\r\n  this.Phone = item.Phone;\r\n}","<script>\r\n  export let point, myMap;\r\n  let show = true, display = 'block', bgColor;\r\n\r\n  $: show  \r\n      ? myMap.geoObjects.add(point.Polygon)\r\n      : myMap.geoObjects.remove(point.Polygon);\r\n\r\n  $: bgColor = show \r\n      ? point.Polygon.options._options.fillColor\r\n      : \"#eee\";\r\n\r\n  $: display = show ? 'block' : 'none';\r\n\r\n  $: {\r\n    show = point.Show ? true : false;\r\n    // console.log('show', point.Name, point.Show)\r\n    }\r\n</script>\r\n\r\n<div class=\"item\">\r\n  <div  class=\"item_box\"\r\n        style=\"--bg-color: {bgColor}; --display: {display}\" \r\n        on:click={() => show = !show}>\r\n  </div>\r\n  <div class=\"item_name\">{point.Name}</div>\r\n  <span class=\"item_square\">{(point.Square / 1e6).toFixed(3)} км²</span>\r\n</div>\r\n\r\n<style>\r\n  .item {\r\n    display: flex;\r\n    align-items: center;\r\n    max-height: 3rem;\r\n    padding: 2px;\r\n    margin: 2px 0;\r\n  }\r\n  .item_box {\r\n    position: relative;\r\n    width: 20px;\r\n    height: 20px;\r\n    margin-right: .5rem;\r\n    opacity: 0.7;\r\n  }\r\n  .item_box:before {\r\n    content: '';\r\n    margin-right: 10px;\r\n    display: inline-block;\r\n    vertical-align: text-top;\r\n    width: 20px;\r\n    height: 20px;\r\n    background: var(--bg-color);\r\n    outline: 1px solid #8080806e;\r\n  }\r\n  .item_box:after {\r\n    content: '';\r\n    position: absolute;\r\n    left: 5px;\r\n    top: 9px;\r\n    background: white;\r\n    width: 2px;\r\n    height: 2px;\r\n    box-shadow: \r\n      2px 0 0 white,\r\n      4px 0 0 white,\r\n      4px -2px 0 white,\r\n      4px -4px 0 white,\r\n      4px -6px 0 white,\r\n      4px -8px 0 white;\r\n    transform: rotate(45deg);\r\n    display: var(--display);\r\n  }\r\n  .item_box:hover {\r\n    cursor: pointer;\r\n    opacity: 1;\r\n    outline: 2px solid black;\r\n  }\r\n\r\n  .item_name {\r\n    flex: 1 1 70%;\r\n  }\r\n  .item_square {\r\n    flex: 1 1 30%;\r\n  }\r\n  .item:hover {\r\n    background: #ccc;\r\n  }\r\n</style>","<script>\r\n  import { onMount } from 'svelte';\r\n  import { swapXY } from './helper';\r\n  import { MKAD } from './MKAD';\r\n  import { PointObject } from './mapObjects';\r\n  import DeliveryPoint from './DelieryPoint.svelte';\r\n  \r\n  let geoJSON, fileinput, myMap, squareMKAD, polygonMKAD; \r\n  let deliveryPoints, deliveryPointsUpd, deliveryPointsUpdSorted = [];\r\n  let disabled3 = true, disabled4 = true;\r\n  let checked2 = false, checked3 = false, checked4 = false, checked5 = false;\r\n\r\n  let center = [55.78361503443606, 37.600883000000006];\r\n  let zoom = 11;\r\n  let Loaded = false;\r\n\r\n  let optionsMKAD = { fillColor: '#3388ee', strokeColor: '#0000FF', opacity: 0.15, strokeWidth: 3, strokeStyle: 'shortdash'};\r\n\r\n  const onFileSelected = e => {\r\n    let file = e.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = e => geoJSON = e.target.result;\r\n  }\r\n\r\n  const removeDeliveryPolygons = () => {\r\n    clearPolygons();\r\n    geoJSON = null;\r\n    deliveryPointsUpdSorted = [];\r\n    checked2 = false;\r\n    checked3 = false;\r\n    disabled3 = true;\r\n  }\r\n\r\n  // очищаем карту от полигонов\r\n  function clearPolygons() {\r\n    deliveryPointsUpdSorted.forEach(n => myMap.geoObjects.remove(n.Polygon));\r\n  }\r\n  \r\n  // русуем все полигоны\r\n  const showPolygons = () => {\r\n    deliveryPointsUpdSorted.forEach(n => myMap.geoObjects.add(n.Polygon));\r\n  }\r\n\r\n  // показываем все полигоны\r\n  const getAllPolygons = () => {\r\n    deliveryPointsUpdSorted.forEach(n => n.Show = true);\r\n    deliveryPointsUpdSorted = [...deliveryPointsUpdSorted];\r\n  }\r\n\r\n  // вычисляем полигоны в пределах МКАД\r\n  const getPolygonsInsideMKAD = () => {\r\n    deliveryPointsUpdSorted = deliveryPointsUpdSorted.map(n => {\r\n      let geoCenter = ymaps.util.bounds.getCenter(n.Polygon.geometry.getBounds());\r\n      n.Show = polygonMKAD.geometry.contains(geoCenter)\r\n        ? true\r\n        : false;\r\n      return n;\r\n    });\r\n  }\r\n\r\n  // русуем полигоны <5% от площади МКАД\r\n  const showPolygons5 = () => {\r\n    deliveryPointsUpdSorted.forEach(n => {\r\n      n.Square/squareMKAD*100 < 5 \r\n        ? n.Show = n.Show\r\n        : n.Show = false;\r\n    });\r\n    deliveryPointsUpdSorted = [...deliveryPointsUpdSorted];\r\n  }\r\n  \r\n  const sortDeliveryPoints = () => {\r\n    // сортируем по площади по убыванию, чтобы бОльшие по площади рисовались первыми\r\n    deliveryPointsUpdSorted = deliveryPointsUpd.sort((a, b) => b.Square - a.Square);\r\n  }\r\n\r\n  const showMKAD = () => {\r\n    let mkad = swapXY(MKAD);\r\n    polygonMKAD = new ymaps.GeoObject({\r\n            geometry: { type: \"Polygon\", coordinates: [mkad] },\r\n            properties:{ balloonContent: \"mkad\" }}, optionsMKAD);\r\n    myMap.geoObjects.add(polygonMKAD);\r\n    // вычисляем площадь МКАД\r\n    squareMKAD = Math.round(ymaps.util.calculateArea(polygonMKAD));\r\n    // console.log('areaMKAD..', (squareMKAD / 1e6).toFixed(3),' км²' );\r\n  }\r\n\r\n  const loadMap = () => {\r\n    myMap = new ymaps.Map(\"map\", { center, zoom });\r\n    Loaded = true;\r\n    showMKAD();  // после монтирования показываем карту МКАД\r\n  }\r\n\r\n  onMount(() => ymaps.ready(['util.calculateArea']).then(loadMap));\r\n\r\n  $: checked2 ? getPolygonsInsideMKAD() : getAllPolygons();\r\n\r\n  $: if (checked3) {\r\n      showPolygons5();\r\n    } else {\r\n      checked2 && getPolygonsInsideMKAD();\r\n    }\r\n\r\n  $: disabled3 = checked2 ? false : true;\r\n\r\n  $: if (!checked2) {\r\n    disabled3 = true;\r\n    checked3 = false;\r\n  }\r\n  \r\n  $: if (deliveryPointsUpdSorted) {\r\n    clearPolygons();\r\n    showPolygons();\r\n  }\r\n\r\n  $: if (geoJSON) {\r\n      let geoObj = JSON.parse(geoJSON);\r\n      deliveryPoints = geoObj[\"Result 1\"];\r\n      deliveryPointsUpd = deliveryPoints.map(n => new PointObject(n));\r\n      sortDeliveryPoints();\r\n      // console.log('geoJSON upd...', deliveryPointsUpd);\r\n    } \r\n</script>\r\n\r\n<div>\r\n  {#if Loaded === false}\r\n    <h1>Loading...</h1>\r\n  {/if}\r\n</div>\r\n<main>\r\n  <div id=\"map\"></div>\r\n  <aside>\r\n    <input type=\"button\" value=\"select GeoObject file\" on:click={() => fileinput.click()}>\r\n    <input style=\"display:none\" type=\"file\" accept=\".json\" on:change={(e)=>onFileSelected(e)} bind:this={fileinput} >\r\n    <input type=\"button\" value=\"clear map\" on:click={removeDeliveryPolygons}>\r\n    \r\n    <section class=\"dpselection\">\r\n      <ul class=\"cb\">\r\n        <li>\r\n          <input class=\"cb_item\" id=\"sc2\" type=\"checkbox\"\r\n                bind:checked={checked2} >\r\n          <label for=\"sc2\">Show inside MKAD</label>\r\n        </li>\r\n        <li>\r\n          <input class=\"cb_item\" id=\"sc3\" type=\"checkbox\"\r\n                bind:checked={checked3} disabled={disabled3} >\r\n          <label for=\"sc3\" class:disabled={disabled3}>Remove >5% delivery</label>\r\n        </li>\r\n        <li>\r\n          <input class=\"cb_item\" id=\"sc4\" type=\"checkbox\"\r\n                bind:checked={checked4} disabled={disabled4}>\r\n          <label for=\"sc4\" class:disabled={disabled4}>Remove overlapping</label>\r\n        </li>\r\n      </ul>\r\n    </section>\r\n\r\n    <section class=\"dphide\">\r\n      <input class=\"cb_item\" id=\"sc5\" type=\"checkbox\"\r\n              bind:checked={checked5} >\r\n      <label for=\"sc5\">Hide unused points</label>\r\n    </section>\r\n\r\n    <section class=\"dplist\">\r\n      {#if deliveryPointsUpdSorted}\r\n        {#each deliveryPointsUpdSorted as point}\r\n          {#if (checked5 && point.Show) }\r\n            <DeliveryPoint point={point} myMap={myMap} />\r\n          {:else if !checked5 }\r\n            <DeliveryPoint point={point} myMap={myMap} />\r\n          {/if}\r\n        {/each}\r\n      {/if}\r\n    </section>\r\n\r\n  </aside>\r\n</main>\r\n\r\n<style>\r\n  main {\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n  }\r\n  aside {\r\n    flex: 1 1 auto;\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    height: 540px;\r\n    margin: 0 1rem;\r\n  }\r\n\r\n  .dpselection, .dplist {\r\n    background: ghostwhite;\r\n    border-radius: .3rem;\r\n    border: 1px solid #ccc;\r\n  }\r\n  .dpselection {\r\n    flex: 0 0 10rem;\r\n    margin-bottom: .5rem;\r\n  }\r\n  .dplist {\r\n    flex: 1 1 20rem;\r\n    padding: .5rem;\r\n    overflow: auto;\r\n  }\r\n  .dpselection:hover,\r\n  .dplist:hover {\r\n    box-shadow: 0 0 20px #80808051;\r\n  }\r\n  .dphide {\r\n    margin: .2rem;\r\n  }\r\n  #map {\r\n    width: 720px;\r\n    height: 540px;\r\n  }\r\n</style>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_style","key","important","style","setProperty","toggle_class","toggle","classList","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","create_component","mount_component","customElement","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","randomInteger","min","max","rand","Math","random","floor","MKAD","PointObject","item","optionsArea","fillColor","toString","strokeColor","opacity","strokeWidth","strokeStyle","CoordinatesJson","n","Lat","Lon","polygon","ymaps","GeoObject","geometry","coordinates","properties","balloonContent","Name","Polygon","square","round","util","calculateArea","Square","Show","Phone","toFixed","bgColor","point","myMap","show","display","geoObjects","remove","_options","iterations","geoJSON","fileinput","squareMKAD","polygonMKAD","deliveryPoints","deliveryPointsUpd","deliveryPointsUpdSorted","disabled3","checked2","checked3","checked4","checked5","center","Loaded","optionsMKAD","onFileSelected","e","file","files","reader","FileReader","readAsText","onload","result","clearPolygons","getPolygonsInsideMKAD","geoCenter","bounds","getCenter","getBounds","contains","loadMap","zoom","mkad","reverse","showMKAD","geoObj","JSON","parse","sort","click","body"],"mappings":"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BAAmB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,kBAAkB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,kBAAkB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,kBAAkB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,iBAAiB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,iBAAiB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,iBAAiB,mBAAmB,CAAC,mBAAmB,iBAAiB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,kBAAkB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,iBAAiB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,iBAAiB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,iBAAiB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,iBAAiB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,iBAAiB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,gBAAgB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,iBAAiB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,iBAAiB,mBAAmB,CAAC,mBAAmB,iBAAiB,CAAC,mBAAmB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,iBAAiB,oBAAoB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,kBAAkB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,kBAAkB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,kBAAkB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,kBAAkB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,iBAAiB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,iBAAiB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,iBAAiB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,iBAAiB,oBAAoB,CAAC,iBAAiB,mBAAmB,CAAC,kBAAkB,kBAAkB,CAAC,kBAAkB,kBAAkB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,kBAAkB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,kBAAkB,CAAC,kBAAkB,mBAAmB,CAAC,iBAAiB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,iBAAiB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,iBAAiB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,iBAAiB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,kBAAkB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,kBAAkB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,kBAAkB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,iBAAiB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,iBAAiB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,kBAAkB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,kBAAkB,CAAC,kBAAkB,mBAAmB,CAAC,iBAAiB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,iBAAiB,mBAAmB,CAAC,iBAAiB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,kBAAkB,CAAC,mBAAmB,oBAAoB,CAAC,mBAAmB,kBAAkB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,kBAAkB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,iBAAiB,CAAC,kBAAkB,kBAAkB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,kBAAkB,CAAC,mBAAmB,mBAAmB,CAAC,iBAAiB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,iBAAiB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,iBAAiB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,mBAAmB,kBAAkB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,kBAAkB,CAAC,kBAAkB,kBAAkB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,kBAAkB,CAAC,mBAAmB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,kBAAkB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,kBAAkB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,kBAAkB,CAAC,kBAAkB,kBAAkB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,kBAAkB,CAAC,mBAAmB,mBAAmB,CAAC,iBAAiB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,iBAAiB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,kBAAkB,CAAC,mBAAmB,kBAAkB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,kBAAkB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,kBAAkB,CAAC,iBAAiB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,iBAAiB,iBAAiB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,kBAAkB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,iBAAiB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,iBAAiB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,kBAAkB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,kBAAkB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,iBAAiB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,iBAAiB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,iBAAiB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,kBAAkB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,iBAAiB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,iBAAiB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,iBAAiB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,iBAAiB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,iBAAiB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,iBAAiB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,iBAAiB,iBAAiB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,iBAAiB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,iBAAiB,CAAC,iBAAiB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,iBAAiB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,kBAAkB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,mBAAmB,oBAAoB,CAAC,iBAAiB,kBAAkB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,iBAAiB,gBAAgB,CAAC,mBAAmB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,kBAAkB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,iBAAiB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,iBAAiB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,iBAAiB,mBAAmB,CAAC,iBAAiB,mBAAmB,CAAC,kBAAkB,kBAAkB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,gBAAgB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,kBAAkB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,iBAAiB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,gBAAgB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,iBAAiB,oBAAoB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,iBAAiB,CAAC,iBAAiB,mBAAmB,CAAC,iBAAiB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,kBAAkB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,iBAAiB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,kBAAkB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,mBAAmB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,mBAAmB,CAAC,kBAAkB,oBAAoB,CAAC,kBAAkB,mBAAmB,CAAC,kBAAkB,mBAAmB,CAAC,mBAAmB,oBAAoB,CAAC,kBAAkB,qBCEnyhC,SAASC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"}